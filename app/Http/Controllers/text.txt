    public function get_transaction_list(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'daterange' => ['required', 'string', 'max:255'],
            'request_type' => ['required'],
            'data_d' => ['string'],
        ]);

        if ($validator->fails()) {
            return back()->withErrors($validator)->withInput();
        }

        $d = explode(' - ', $request->daterange);

        $f = explode('/', $d[0]);
        $from = $f[2] . '-' . $f[0] . '-' . $f[1];
        $t = explode('/', $d[1]);
        $to = $t[2] . '-' . $t[0] . '-' . $t[1];

        $months = array(
            '',
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July ',
            'August',
            'September',
            'October',
            'November',
            'December',
        );

        // if load type is set to all
        if ($request->request_type == "all") {

            $hash = hash(
                'sha512',
                $from .
                    $to
            );

            $url = 'https://api.ajisaqsolutions.com/api/transaction/list?apiUser=' . config('app.apiUser') .
                '&apiKey=' . config('app.apiKey') .
                '&hash=' . $hash .
                '&from=' . $from .
                '&to=' . $to;

            if (
                $response = Http::get($url)
            ) {
                $res = json_decode($response);
                // return $response;
                if ($res->status == 'Ok') {
                    if (count($res->data) > 0) {
                        $transactions = $res->data;
                        // Transaction::create([
                        //     'org_id' => Auth::user()->organization_id,
                        //     'agent_id' => '3',
                        //     'customer_id' => '6',
                        //     'device_id' => '2',
                        //     'item_id' => '3',
                        //     'quantity' => 1,
                        //     'date' => now(),
                        //     'amount' => 15000,
                        // ]);
                        // dd($transactions[0] );
                        return view('transactions.all', compact('transactions', 'from', 'to', 'months'));
                    } else {
                        return back()->with('error', 'No Transaction Within this range. Try Again!');
                    }
                } else {
                    return back()->with('error', 'Service Error, Try again later!');
                }
            }
        }

        // load transactions by customer
        if ($request->request_type == "customer") {
            if (!$request->data_d) {
                return back()->with('error', 'Make sure you select Customer.');
            }
            $customer = Customer::find($request->data_d);
            $hash = hash(
                'sha512',
                $customer->phone .
                    $from .
                    $to
            );

            $url = 'https://api.ajisaqsolutions.com/api/transaction/listByCustomer?apiUser=' . config('app.apiUser') .
                '&apiKey=' . config('app.apiKey') .
                '&hash=' . $hash .
                '&customerId=' . $customer->phone .
                '&from=' . $from .
                '&to=' . $to;

            if (
                $response = Http::get($url)
            ) {
                $res = json_decode($response);
                // return $response;
                if ($res->status == 'Ok') {
                    if (count($res->data) > 0) {
                        $transactions = $res->data;
                        // dd($res);
                        return view('transactions.customers', compact('transactions', 'customer', 'from', 'to', 'months'));
                    } else {
                        return back()->with('error', 'No Transaction for this Customer.');
                    }
                } else {
                    return back()->with('error', 'Service Error, Try again later!');
                }
            }
        }


        // load transactions by Agent
        if ($request->request_type == "agent") {
            if (!$request->data_d) {
                return back()->with('error', 'Make sure you select Agent.');
            }
            $agent = Agent::find($request->data_d);
            $hash = hash(
                'sha512',
                $agent->phone .
                    $from .
                    $to
            );

            $url = 'https://api.ajisaqsolutions.com/api/transaction/listByAgent?apiUser=' . config('app.apiUser') .
                '&apiKey=' . config('app.apiKey') .
                '&hash=' . $hash .
                '&agentId=' . $agent->phone .
                '&from=' . $from .
                '&to=' . $to;
            // dd($url);
            if (
                $response = Http::get($url)
            ) {
                $res = json_decode($response);
                // return $response;
                if ($res->status == 'Ok') {
                    if (count($res->data) > 0) {
                        $transactions = $res->data;
                        // dd($res);
                        return view('transactions.agents', compact('transactions', 'agent', 'from', 'to', 'months'));
                    } else {
                        return back()->with('error', 'No Transaction for this Agent.');
                    }
                } else {
                    return back()->with('error', 'Service Error, Try again later!');
                }
            }
        }

        // load transactions by Device
        if ($request->request_type == "device") {
            if (!$request->data_d) {
                return back()->with('error', 'Make sure you select a device.');
            }
            $device = Device::find($request->data_d);
            $hash = hash(
                'sha512',
                $device->id .
                    $from .
                    $to
            );

            $url = 'https://api.ajisaqsolutions.com/api/transaction/listByDevice?apiUser=' . config('app.apiUser') .
                '&apiKey=' . config('app.apiKey') .
                '&hash=' . $hash .
                '&deviceId=' . $device->id .
                '&from=' . $from .
                '&to=' . $to;
            // dd($url);
            if (
                $response = Http::get($url)
            ) {
                $res = json_decode($response);
                // return $response;
                if ($res->status == 'Ok') {
                    if (count($res->data) > 0) {
                        $transactions = $res->data;
                        // dd($res);
                        return view('transactions.devices', compact('transactions', 'device', 'from', 'to', 'months'));
                    } else {
                        return back()->with('error', 'No Transaction for this Device.');
                    }
                } else {
                    return back()->with('error', 'Service Error, Try again later!');
                }
            }
        }

        // load transactions by item
        if ($request->request_type == "item") {
            if (!$request->data_d) {
                return back()->with('error', 'Make sure you select Item.');
            }
            $item = Item::find($request->data_d);
            $hash = hash(
                'sha512',
                $item->id .
                    $from .
                    $to
            );

            $url = 'https://api.ajisaqsolutions.com/api/transaction/listByItem?apiUser=' . config('app.apiUser') .
                '&apiKey=' . config('app.apiKey') .
                '&hash=' . $hash .
                '&itemId=' . $item->id .
                '&from=' . $from .
                '&to=' . $to;
            // return $hash . "   " . $item->id . "  " . $from . " " . $to;
            if (
                $response = Http::get($url)
            ) {
                $res = json_decode($response);
                // return $response;
                if ($res->status == 'Ok') {
                    if (count($res->data) > 0) {
                        $transactions = $res->data;
                        // dd($res);
                        return view('transactions.items', compact('transactions', 'item', 'from', 'to', 'months'));
                    } else {
                        return back()->with('error', 'No Transaction for this Item.');
                    }
                } else {
                    return back()->with('error', 'Service Error, Try again later!');
                }
            }
        }

        return back();
    }



        $api = Api::where('api_user', '=', $request->api_user)->get();
        if (count($api) > 0) {
            if ($api[0]->api_key == $request->api_key) {
            } else {
                $res = [
                    'status' => false,
                    'data' => 'API_KEY Not correct'
                ];
                return response()->json($res);
            }
        } else {
            $res = [
                'status' => false,
                'data' => 'API_USER Not Found'
            ];
            return response()->json($res);
        }


        'api_user' => 'required',
        'api_key' => 'required',
